/* CardFixes.module.css - Addresses common card styling issues across the dashboard */

/* General card container fixes */
.cardContainer {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  overflow: hidden; /* Prevent content from spilling outside cards */
  position: relative;
  background-color: var(--color-bg-secondary, #1a1a1d);
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Card header styling */
.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 16px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  background-color: rgba(0, 0, 0, 0.2);
}

.cardTitle {
  font-size: 16px;
  font-weight: 600;
  color: #4ecca3; /* Accent color */
  margin: 0;
}

/* Card content area with scrolling */
.cardContent {
  flex: 1;
  overflow-y: auto;
  padding: 16px;
  position: relative;
}

/* Error state styling */
.errorState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  padding: 20px;
  color: #aaa;
}

.errorIcon {
  font-size: 24px;
  margin-bottom: 12px;
  color: #dc3545;
}

.errorMessage {
  margin: 0 0 8px 0;
  font-size: 14px;
}

.errorHint {
  margin: 0;
  font-size: 12px;
  color: #777;
}

/* Loading state styling */
.loadingState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  padding: 20px;
}

.loadingSpinner {
  margin-bottom: 16px;
}

.loadingText {
  margin: 0;
  font-size: 14px;
  color: #aaa;
}

/* Empty state styling */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  padding: 20px;
  color: #aaa;
}

.emptyIcon {
  font-size: 24px;
  margin-bottom: 12px;
  opacity: 0.5;
}

.emptyText {
  margin: 0;
  font-size: 14px;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .cardHeader {
    padding: 10px 12px;
  }
  
  .cardTitle {
    font-size: 14px;
  }
  
  .cardContent {
    padding: 12px;
  }
}

/* Resize handle enhancement */
.enhancedResizeHandle {
  position: absolute;
  right: 4px;
  bottom: 4px;
  width: 20px;
  height: 20px;
  background-color: rgba(76, 255, 142, 0.1);
  border-radius: 4px;
  cursor: ns-resize;
  z-index: 10;
  transition: background-color 0.2s ease, opacity 0.2s ease, transform 0.2s ease;
  opacity: 0.6;
  display: flex;
  align-items: center;
  justify-content: center;
}

.enhancedResizeHandle:hover {
  background-color: rgba(76, 255, 142, 0.3);
  opacity: 1;
  transform: scale(1.2);
}

.enhancedResizeHandle:active {
  background-color: rgba(76, 255, 142, 0.5);
  transform: scale(1.1);
}

.enhancedResizeHandle:before,
.enhancedResizeHandle:after {
  content: '';
  position: absolute;
  background-color: rgba(76, 255, 142, 0.7);
  bottom: 8px;
  right: 6px;
  height: 2px;
  border-radius: 1px;
  box-shadow: 0 0 3px rgba(76, 255, 142, 0.5);
}

.enhancedResizeHandle:before {
  width: 6px;
  bottom: 6px;
}

.enhancedResizeHandle:after {
  width: 10px;
  bottom: 10px;
}

.resizingCard {
  box-shadow: 0 0 16px rgba(76, 255, 142, 0.5) !important;
  transition: none !important;
  z-index: 1000 !important;
}

.cardResizeHandle {
  position: absolute;
  right: 5px;
  bottom: 5px;
  width: 20px;
  height: 20px;
  background-color: rgba(76, 255, 142, 0.15);
  border-radius: 4px;
  cursor: ns-resize;
  z-index: 1000;
  transition: background-color 0.2s ease, opacity 0.2s ease, transform 0.2s ease;
  opacity: 0.6;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  padding: 3px;
}

.cardResizeHandle:hover {
  background-color: rgba(76, 255, 142, 0.3);
  opacity: 1;
  transform: scale(1.1);
}

.cardResizeHandle:active {
  background-color: rgba(76, 255, 142, 0.4);
}

.cardResizeHandle svg {
  color: rgba(76, 255, 142, 0.8);
  filter: drop-shadow(0 0 2px rgba(76, 255, 142, 0.5));
}

.resizingCard {
  box-shadow: 0 0 16px rgba(76, 255, 142, 0.5) !important;
  transition: none !important;
  z-index: 1000 !important;
  user-select: none !important;
} 